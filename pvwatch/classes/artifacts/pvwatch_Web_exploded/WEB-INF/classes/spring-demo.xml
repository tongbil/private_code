<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
         http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        ">
	<bean name="batchService" class="com.qixin.ssh.services.impl.BatchServiceImpl"
		init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean name="numproService" class="com.qixin.ssh.services.impl.NumproServiceImpl"
		init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean name="salesService" class="com.qixin.ssh.services.impl.SalesServiceImpl"
		init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="referenceService" class="com.qixin.ssh.services.impl.ReferenceServiceImpl"
		init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean name="fileService" class="com.qixin.ssh.services.impl.FileServiceImpl"
		init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean name="mailtService" class="com.qixin.ssh.services.impl.MailtServiceImpl"
		  init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean name="repetionService" class="com.qixin.ssh.services.impl.RepetionServiceImpl"
		  init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	
	

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close"><!-- 设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
		<property name="url" value="jdbc:mysql://localhost:3306/osgitest?useUnicode=true&amp;autoReconnect=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		
		<property name="defaultReadOnly" value="false" /><!-- 设置为只读状态，配置读写分离时，读库可以设置为true 
			在连接池创建后，会初始化并维护一定数量的数据库安连接，当请求过多时，数据库会动态增加连接数， 当请求过少时，连接池会减少连接数至一个最小空闲值 -->
		<property name="initialSize" value="5" /><!-- 在启动连接池初始创建的数据库连接，默认为0 -->
		<property name="maxActive" value="15" /><!-- 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 -->
		<property name="maxIdle" value="10" /><!-- 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 -->
		<property name="minIdle" value="2" /><!-- 空闲时的最小连接数，低于这个数量会创建新连接，默认为0 -->
		<property name="maxWait" value="10000" /><!-- 连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
		<property name="validationQuery" value="SELECT 1 " />
       <property name="testOnBorrow" value="true"/>
	</bean>
	<!-- 配置我们的回话工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		
		
		
		<property name="hibernateProperties">
			<props>
				 <prop key="hibernate.autoReconnect">true</prop>
				<!-- MySQL的方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<!-- 必要时在数据库新建所有表格 -->
				<prop key="hibernate.hbm2ddl.auto">false</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- 配置current session的上下文环境，方便我们调用sessionFactory获取当前线程统一个session对象 -->
				<prop key="current_session_context_class">thread</prop>
				<!-- 用更漂亮的格式显示sql语句 -->
				<prop key="hibernate.format_sql">true</prop>
				
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/qixin/ssh/model/batch.hbm.xml</value>
				<value>com/qixin/ssh/model/numpro.hbm.xml</value>
				<value>com/qixin/ssh/model/sales.hbm.xml</value>
				
				<value>com/qixin/ssh/model/file.hbm.xml</value>
				<value>com/qixin/ssh/model/reference.hbm.xml</value>
				<value>com/qixin/ssh/model/semail.hbm.xml</value>
				<value>com/qixin/ssh/model/smailFile.hbm.xml</value>
				<value>com/qixin/ssh/model/repetion.hbm.xml</value>
				<value>com/qixin/ssh/model/mailAccept.hbm.xml</value>
			
			</list>
		</property>

	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="maxUploadSize" value="2000000" />
	    <property name="resolveLazily" value="true"></property>  
	     <property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置事务事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
			
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切点，并把切点和事务属性关联起来 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.qixin.ssh.services.*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
</beans>
